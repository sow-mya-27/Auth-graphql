{"ast":null,"code":"var _jsxFileName = \"/home/sowmga/Desktop/zemoso-training/graphql/Authentication/client/src/pages/register.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { AuthContext } from \"../context/authContext\";\nimport { useForm } from \"../utility/hooks\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"graphql-tag\";\nimport { useNavigate } from \"react-router-dom\";\nimport { TextField, Button, Container, Stack, Alert } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst REGISTER_USER = gql`\n    mutation Mutation(\n        $registerInput:RegisterInput\n    ){\n        registerUser(\n            registerInput:@registerInput\n        ){\n            email\n            username\n            token\n        }\n    }\n`;\n\nfunction Register(props) {\n  _s();\n\n  const context = useContext(AuthContext);\n  let navigate = useNavigate();\n  const [errors, setErrors] = useState([]);\n  const {\n    onChange,\n    onSubmit,\n    values\n  } = useForm(() => {}, {\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [registerUser, {\n    loading\n  }] = useMutation(REGISTER_USER, {\n    update(proxy, _ref) {\n      let {\n        data: {\n          registerUser: userData\n        }\n      } = _ref;\n      context.login(userData);\n      navigate('/');\n    },\n\n    onError(_ref2) {\n      let {\n        graphQLErrors\n      } = _ref2;\n      setErrors(graphQLErrors);\n    },\n\n    variables: {\n      registerInput: values\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    spacing: 2,\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"this is a register page, register below to create an account!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"aRGbTS6XxnTSVlSCJLTIdPkrYdo=\", false, function () {\n  return [useNavigate, useForm, useMutation];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useContext","useState","AuthContext","useForm","useMutation","gql","useNavigate","TextField","Button","Container","Stack","Alert","REGISTER_USER","Register","props","context","navigate","errors","setErrors","onChange","onSubmit","values","username","email","password","confirmPassword","registerUser","loading","update","proxy","data","userData","login","onError","graphQLErrors","variables","registerInput"],"sources":["/home/sowmga/Desktop/zemoso-training/graphql/Authentication/client/src/pages/register.js"],"sourcesContent":["import { useContext,useState } from \"react\";\nimport {AuthContext} from \"../context/authContext\";\nimport {useForm} from \"../utility/hooks\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport {gql} from \"graphql-tag\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport {TextField,Button,Container,Stack,Alert} from \"@mui/material\"\n\nconst REGISTER_USER=gql `\n    mutation Mutation(\n        $registerInput:RegisterInput\n    ){\n        registerUser(\n            registerInput:@registerInput\n        ){\n            email\n            username\n            token\n        }\n    }\n`\n\nfunction Register(props){\n    const context=useContext(AuthContext);\n    let navigate=useNavigate();\n    const [errors,setErrors]=useState([])\n\n    const {onChange,onSubmit,values}=useForm(()=>{},{\n        username:'',\n        email:'',\n        password:'',\n        confirmPassword:''\n    })\n\n    const [registerUser,{loading}]=useMutation(REGISTER_USER,{\n        update(proxy,{data:{registerUser:userData}}){\n            context.login(userData);\n            navigate('/')\n        },\n        onError ({graphQLErrors}){\n            setErrors(graphQLErrors)\n        },\n        variables:{registerInput:values}\n    })\n\n    return(\n        <Container spacing={2} maxWidth=\"sm\">\n            <h3>Register</h3>\n            <p>this is a register page, register below to create an account!</p>\n        </Container>\n    )\n}\n\nexport default Register;"],"mappings":";;;AAAA,SAASA,UAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,SAAQC,GAAR,QAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,SAAQC,SAAR,EAAkBC,MAAlB,EAAyBC,SAAzB,EAAmCC,KAAnC,EAAyCC,KAAzC,QAAqD,eAArD;;AAEA,MAAMC,aAAa,GAACP,GAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;;AAcA,SAASQ,QAAT,CAAkBC,KAAlB,EAAwB;EAAA;;EACpB,MAAMC,OAAO,GAACf,UAAU,CAACE,WAAD,CAAxB;EACA,IAAIc,QAAQ,GAACV,WAAW,EAAxB;EACA,MAAM,CAACW,MAAD,EAAQC,SAAR,IAAmBjB,QAAQ,CAAC,EAAD,CAAjC;EAEA,MAAM;IAACkB,QAAD;IAAUC,QAAV;IAAmBC;EAAnB,IAA2BlB,OAAO,CAAC,MAAI,CAAE,CAAP,EAAQ;IAC5CmB,QAAQ,EAAC,EADmC;IAE5CC,KAAK,EAAC,EAFsC;IAG5CC,QAAQ,EAAC,EAHmC;IAI5CC,eAAe,EAAC;EAJ4B,CAAR,CAAxC;EAOA,MAAM,CAACC,YAAD,EAAc;IAACC;EAAD,CAAd,IAAyBvB,WAAW,CAACQ,aAAD,EAAe;IACrDgB,MAAM,CAACC,KAAD,QAAsC;MAAA,IAA/B;QAACC,IAAI,EAAC;UAACJ,YAAY,EAACK;QAAd;MAAN,CAA+B;MACxChB,OAAO,CAACiB,KAAR,CAAcD,QAAd;MACAf,QAAQ,CAAC,GAAD,CAAR;IACH,CAJoD;;IAKrDiB,OAAO,QAAkB;MAAA,IAAhB;QAACC;MAAD,CAAgB;MACrBhB,SAAS,CAACgB,aAAD,CAAT;IACH,CAPoD;;IAQrDC,SAAS,EAAC;MAACC,aAAa,EAACf;IAAf;EAR2C,CAAf,CAA1C;EAWA,oBACI,QAAC,SAAD;IAAW,OAAO,EAAE,CAApB;IAAuB,QAAQ,EAAC,IAAhC;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH;;GA7BQR,Q;UAEQP,W,EAGoBH,O,EAOFC,W;;;KAZ1BS,Q;AA+BT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}