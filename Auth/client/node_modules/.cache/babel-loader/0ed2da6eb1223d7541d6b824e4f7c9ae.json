{"ast":null,"code":"import { ApolloClient, createHttpLink, InMemoryCache } from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:5000/\"\n});\nconst authLink = setContext((_, _ref) => {\n  let {\n    headers\n  } = _ref;\n  return {\n    headers: { ...headers,\n      authorization: localStorage.getItem(\"token\") || \"\"\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nexport default client;","map":{"version":3,"names":["ApolloClient","createHttpLink","InMemoryCache","setContext","httpLink","uri","authLink","_","headers","authorization","localStorage","getItem","client","link","concat","cache"],"sources":["/home/sowmga/Desktop/zemoso-training/Assignment-Auth/client/src/apolloClient.js"],"sourcesContent":["import {ApolloClient,createHttpLink,InMemoryCache} from \"@apollo/client\"\nimport {setContext} from \"@apollo/client/link/context\"\n\nconst httpLink=createHttpLink({\n    uri:\"http://localhost:5000/\"\n})\n\nconst authLink=setContext((_,{headers})=>{\n    return{\n        headers:{\n            ...headers,\n            authorization:localStorage.getItem(\"token\") || \"\"\n        }\n    }\n})\n\nconst client=new ApolloClient({\n    link:authLink.concat(httpLink),\n    cache:new InMemoryCache()\n})\n\nexport default client;"],"mappings":"AAAA,SAAQA,YAAR,EAAqBC,cAArB,EAAoCC,aAApC,QAAwD,gBAAxD;AACA,SAAQC,UAAR,QAAyB,6BAAzB;AAEA,MAAMC,QAAQ,GAACH,cAAc,CAAC;EAC1BI,GAAG,EAAC;AADsB,CAAD,CAA7B;AAIA,MAAMC,QAAQ,GAACH,UAAU,CAAC,CAACI,CAAD,WAAe;EAAA,IAAZ;IAACC;EAAD,CAAY;EACrC,OAAM;IACFA,OAAO,EAAC,EACJ,GAAGA,OADC;MAEJC,aAAa,EAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC;IAF3C;EADN,CAAN;AAMH,CAPwB,CAAzB;AASA,MAAMC,MAAM,GAAC,IAAIZ,YAAJ,CAAiB;EAC1Ba,IAAI,EAACP,QAAQ,CAACQ,MAAT,CAAgBV,QAAhB,CADqB;EAE1BW,KAAK,EAAC,IAAIb,aAAJ;AAFoB,CAAjB,CAAb;AAKA,eAAeU,MAAf"},"metadata":{},"sourceType":"module"}